
name: 'AutoCoder'
description: >
  This GitHub Action automates the end-to-end process of generating code from GitHub issues using OpenAI’s ChatGPT.
  It reads the content of an issue, interprets the requirements using AI, and generates the corresponding code automatically.
  The action then creates a dedicated branch, commits the AI-generated code, and opens a pull request for human review.
  This enables seamless integration of AI into your development workflow, enhancing productivity and reducing manual coding effort.
  It is highly configurable—supporting custom prompts, file templates, branch naming strategies, and trigger events such as issue creation or labeling.
  Whether you're building new features, writing tests, or scaffolding boilerplate, this action translates natural language into functional code.
  It’s ideal for individuals and teams looking to explore or adopt AI-powered development workflows directly within GitHub.
  By automating repetitive tasks and code scaffolding, this tool accelerates prototyping, encourages collaboration, and brings AI into the heart of DevOps.
author: 'Brendan Tomlinson'

inputs:
  GITHUB_TOKEN:
    description: 'Personal access token (PAT) used for GitHub API authentication. This token is required to create pull requests and handle other repository interactions.'
    required: true
  REPOSITORY:
    description: 'The repository where the action will be executed.'
    required: true
  ISSUE_NUMBER:
    description: 'The number of the issue that triggered the action.'
    required: true
  OPENAI_API_KEY:
    description: 'API key for OpenAI, enabling interactions with the ChatGPT service to generate code based on issue descriptions.'
    required: true
  SCRIPT_PATH:
    description: 'The path to the script that interacts with ChatGPT and generates code.'
    required: true
  LABEL:
    description: 'Allows users to customize the label that triggers the action.'
    required: true

outputs:
  pull_request_url:
    description: 'The URL of the pull request that has been automatically created, containing the auto-generated code for review and potential merging.'

runs:
  using: 'composite'
  steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
    - name: Configure Git
      run: |
        git config --local user.name "autocoder-bot"
        git config --local user.email "actions@github.com"
      shell: bash
    
    - name: make the script executable
      run: chmod +x ./scripts/script.sh
      shell: bash
    
    - name: Generate Code with ChatGPT
      id: generate_code
      run: ./scripts/script.sh "${{ env.GITHUB_TOKEN }}" "${{ env.REPOSITORY }}" "${{ env.ISSUE_NUMBER }}" "${{ env.OPENAI_API_KEY }}"
      env:
        GITHUB_TOKEN: ${{ inputs.GITHUB_TOKEN }}
        REPOSITORY: ${{ inputs.REPOSITORY }}
        ISSUE_NUMBER: ${{ inputs.ISSUE_NUMBER }}
        OPENAI_API_KEY: ${{ inputs.OPENAI_API_KEY }}
      shell: bash
    
    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: autocoder-artifact
        path: autocoder-bot/

    - name: Download Artifact
      uses: actions/download-artifact@v4
      with:
        name: autocoder-artifact
        path: autocoder-artifact/

    - name: List Files
      run: ls -R ./autocoder-artifact
      shell: bash
    
    - name: Commit Changes
      run: |
        git config --local user.email "actions@github.com"
        git config --local user.name "autocoder-bot"
        git add .
        git commit -m "Add generated code from ChatGPT"
      shell: bash
    
    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v6
      with:
        labels: "autocoder-bot"
        author: autocoder-bot <actions@github.com>
        title: "#${{ github.event.issue.number }}"
        branch: "autocoder-branch-${{ github.event.issue.number }}"
